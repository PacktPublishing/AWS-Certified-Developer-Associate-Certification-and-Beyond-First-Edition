Description: This template deploys a VPC(internet gateway, public and private subnets with route tables, nat gateway in 1 AZ, security groups)

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: todo-plus-production

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.10.0.0/16

  PublicSubnetAZ1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.10.1.0/24

  PublicSubnetAZ2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.10.2.0/24

  PrivateAppSubnet1AZ1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private app subnet in the first Availability Zone
    Type: String
    Default: 10.10.10.0/24

  PrivateAppSubnet2AZ2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private app subnet in the second Availability Zone
    Type: String
    Default: 10.10.11.0/24

  PrivateDataSubnet1AZ1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private database subnet in the first Availability Zone
    Type: String
    Default: 10.10.20.0/24

  PrivateDataSubnet2AZ2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private database subnet in the second Availability Zone
    Type: String
    Default: 10.10.21.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetAZ1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetAZ2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateAppSubnet1AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateAppSubnet1AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (for compute EC2/ECS etc) (AZ1)

  PrivateAppSubnet2AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateAppSubnet2AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (for compute EC2/ECS etc) (AZ2)

  PrivateDataSubnet1AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateDataSubnet1AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (for database) (AZ1)

  PrivateDataSubnet2AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateDataSubnet2AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (for database) (AZ2)

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnetAZ1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetAZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAZ1

  PublicSubnetAZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAZ2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (for compute EC2/ECS etc) (AZ1)

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateAppSubnet1AZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateAppSubnet1AZ1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (for compute EC2/ECS etc) (AZ2)

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateAppSubnet2AZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateAppSubnet2AZ2

  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (for database) (AZ1)

  DefaultPrivateRoute3:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateDataSubnet1AZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      SubnetId: !Ref PrivateDataSubnet1AZ1

  PrivateRouteTable4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (for database) (AZ2)

  DefaultPrivateRoute4:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable4
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateDataSubnet2AZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable4
      SubnetId: !Ref PrivateDataSubnet2AZ2

  NLBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "todo-plus-nlb-sg"
      GroupDescription: "Security group with no ingress rule (for NLB)"
      VpcId: !Ref VPC

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "todo-plus-alb-sg"
      GroupDescription: "Allow http/https traffic originating from NLB security group"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: Allow https traffic from nlb
          SourceSecurityGroupId: !Ref NLBSecurityGroup
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp

  ComputeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "todo-plus-compute-sg"
      GroupDescription: "Allow http traffic from alb security group"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: Allow http traffic from alb security group
          SourceSecurityGroupId: !Ref ALBSecurityGroup
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "todo-plus-rds-mysql-sg"
      GroupDescription: "Allow http traffic from alb security group"
      VpcId: !Ref VPC

  DatabaseSecurityGroupIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow mysql(3306) traffic from compute
      SourceSecurityGroupId: !Ref ComputeSecurityGroup
      GroupId: !Ref DatabaseSecurityGroup
      FromPort: 3306
      ToPort: 3306
      IpProtocol: tcp

  DatabaseSecurityGroupIngress2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow 3306 traffic from itself
      SourceSecurityGroupId: !Ref DatabaseSecurityGroup
      GroupId: !Ref DatabaseSecurityGroup
      FromPort: 3306
      ToPort: 3306
      IpProtocol: tcp

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [",", [!Ref PublicSubnetAZ1, !Ref PublicSubnetAZ2]]

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [",", [!Ref PrivateAppSubnet1AZ1, !Ref PrivateAppSubnet2AZ2]]

  PublicSubnetAZ1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnetAZ1

  PublicSubnetAZ2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnetAZ2

  PrivateAppSubnet1AZ1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateAppSubnet1AZ1

  PrivateAppSubnet2AZ2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateAppSubnet2AZ2

  PrivateDataSubnet1AZ1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateDataSubnet1AZ1

  PrivateDataSubnet2AZ2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateDataSubnet2AZ2

  NLBSecurityGroup:
    Description: Security group with no ingress rule (for NLB)
    Value: !Ref NLBSecurityGroup

  ALBSecurityGroup:
    Description: Security group for NLB
    Value: !Ref ALBSecurityGroup
