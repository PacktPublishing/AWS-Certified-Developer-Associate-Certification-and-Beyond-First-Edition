AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless website to host the Todo List Coming Soon frontend website

Resources:
  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Ensure that the S3 static website can only be accessed via CloudFront'

  CloudfrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Comment: "Cloudfront distribution for Todo List Coming Soon website"
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        # This section specifies the S3 Website orgin that CloudFront will connect to
        Origins:
          - Id: s3-todo-website
            DomainName: !GetAtt S3Bucket.DomainName
            S3OriginConfig:
              # This section restricts access so that only the OAI can access the bucket
              OriginAccessIdentity: 
                Fn::Sub: 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        # Specify behaviours to connect to your origin
        DefaultCacheBehavior:
          Compress: 'true'
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3-todo-website
          # Requiring HTTPS for communication between viewers and CloudFront
          ViewerProtocolPolicy : redirect-to-https

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      # Change the bucket name below to the name of your website. When creating the bucket for website hosting, you must use a full domain name such as example.com
      BucketName: <YOURWEBSITEBUCKETNAME.COM>

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
      # The bucket policy will ensure that only CloudFront can access the contents of the bucket and access the website on your behalf
        Statement:
          -
            Effect: Allow
            Action: 's3:GetObject'
            Resource:
              - !Sub "arn:aws:s3:::${S3Bucket}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"